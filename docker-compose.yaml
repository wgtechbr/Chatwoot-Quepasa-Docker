version: '3'

secrets:
  pgpassword:
    external: true
  signing_secret:
    external: true

services:
  base:
    &base
    image: chatwoot/chatwoot:latest
    container_name: chatwoot
    hostname: chatwoot
    env_file: ./evolution-chatwoot/.env
    volumes:
      - /data/storage:/app/storage
    restart: always
    stdin_open: true
    tty: true
    depends_on:
      - postgres
      - redis
    networks:
      - chatwoot-network

  evolution:
    image: evolution
    container_name: "evolution"
    mem_limit: 4096M
    env_file:
      - ./evolution-source/helpers/.env
    extra_hosts:
      - "host.docker.internal:host-gateway"
    build:
      context: ./
      dockerfile: ./evolution-source/docker/Dockerfile
    volumes:
      - ./evolution-source/src:/opt/evolution
    # command: /bin/bash docker-entrypoint.sh
    restart: always
    stdin_open: true
    tty: true
    networks:
      - chatwoot-network

  rails:
    <<: *base
    container_name: chatwoot-rails
    hostname: chatwoot-rails
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    restart: always
    networks:
      - evolution-network
    entrypoint: docker/entrypoints/rails.sh
    command: >
      sh -c "while ! nc -z postgres 5432; do sleep 1; done;
             bundle exec rails db:chatwoot_prepare;
             bundle exec rails s -p 3000 -b '0.0.0.0';
             bundle install"

  sidekiq:
    <<: *base
    container_name: chatwoot-sidekiq
    hostname: chatwoot-sidekiq
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    networks:
      - evolution-network
    restart: unless-stopped
    command:
      [
        'bundle',
        'exec',
        'sidekiq',
        '-C',
        'config/sidekiq.yml'
      ]

  postgres:
    image: postgres:12
    container_name: chatwoot-postgres
    hostname: chatwoot-postgres
    restart: always
    volumes:
      - ./evolution-chatwoot/data/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=chatwoot
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=chatwoot
    networks:
      - chatwoot-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: chatwoot-pgadmin4
    hostname: chatwoot-pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "demo@demo.com.br"
      PGADMIN_DEFAULT_PASSWORD: "PgAdmin2021!"
    restart: always
    depends_on:
      - postgres
    networks:
      - chatwoot-network

  redis:
    image: redis:alpine
    container_name: chatwoot-redis
    hostname: chatwoot-redis
    restart: always
    command:
      [
        "sh",
        "-c",
        "redis-server --requirepass \"$REDIS_PASSWORD\""
      ]
    env_file: ./evolution-chatwoot/.env
    volumes:
      - ./evolution-chatwoot/data/redis:/data
    networks:
      - chatwoot-network

  nginx:
    build:
      context: ./evolution-nginx
      dockerfile: Dockerfile
    container_name: nginx
    entrypoint: nginx -g "daemon off;"
    ports:
      - "8080:8080" #chatwoot
      - "8081:8081" #evolution
      - "8082:8082" #pgadmin
      - "8083:8083" #redis
    restart: always
    networks:
      - chatwoot-network
    depends_on:
      - evolution

networks:
  chatwoot-network:
    name: chatwoot-network
    driver: bridge
